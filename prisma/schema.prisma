// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider       = "postgresql"
  url            = env("DATABASE_URL")
  directUrl      = env("DIRECT_URL")
}

// create table lists (
//   id bigint generated by default as identity primary key,
//   user_id uuid references auth.users not null default auth.uid(),
//   board_id bigint references boards not null,
//   title text default '',
//   position int not null default 0,
//   inserted_at timestamp with time zone default timezone('utc'::text, now()) not null
// );


model Card {
  id          BigInt        @id   @default(autoincrement())
  creator     User?         @relation(fields: [creatorId], references: [id])
  creatorId   BigInt    
  list        List          @relation(fields: [listId], references: [id])
  listId      BigInt
  project     Project       @relation(fields: [projectId], references: [id]) 
  projectId   BigInt

  title       String        @default("")
  description String        @default("")
  position    Int           @default(0)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  dueDate     DateTime      
  archived    Boolean       @default(false)
}

model List {
  id          BigInt            @id   @default(autoincrement())
  creator     User?             @relation(fields: [creatorId], references: [id])
  creatorId   BigInt    
  project     Project           @relation(fields: [projectId], references: [id]) 
  projectId   BigInt
  
  title       String            @default("")
  position    BigInt            @default(1)
  archived    Boolean           @default(false)
  createdAt   DateTime          @default(now())
  updateAt    DateTime          @updatedAt

  cards       Card[]

  @@index([projectId, createdAt(sort: Desc)])
}

model Project {
  id          BigInt               @id @default(autoincrement())
  name        String
  archived    Boolean           @default(false)
  creator     User?             @relation(fields: [creatorId], references: [id])
  creatorId   BigInt    
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  type        ProjectType       @default(TodoList)

  lists       List[]
  cards       Card[]

  @@index([creatorId, createdAt(sort: Desc)])
}

model User {
  id            BigInt     @id @default(autoincrement())
  email         String  @unique
  name          String?
  projects      Project[]
  lists         List[]
  cards         Card[]
}

enum ProjectType {
  TodoList
}