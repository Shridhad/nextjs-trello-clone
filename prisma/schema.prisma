generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")
  extensions = [uuid_ossp(map: "uuid-ossp", schema: "extensions")]
  schemas  = ["public", "extensions"]
}

model Card {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt   DateTime? @default(now()) @db.Timestamptz(6)
  title       String?   @default("")
  description String?   @default("")
  updatedAt   DateTime @updatedAt @db.Timestamptz(6)
  dueDate     DateTime? @db.Timestamptz(6)
  archived    Boolean?  @default(false)
  listId      String   @db.Uuid
  key         String?   @default("") @db.VarChar
  list        CardList @relation(fields: [listId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model Project {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt   DateTime    @default(now()) @db.Timestamptz(6)
  name        String
  description String      @default("")
  type        ProjectType @default(TodoList)
  archived    Boolean     @default(false)
  updatedAt   DateTime    @updatedAt @db.Timestamptz(6)
  profileId   String      @db.Uuid
  key         String      @db.VarChar
  CardList    CardList[]
  Profile     Profile     @relation(fields: [profileId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model Profile {
  id        String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime   @default(now()) @db.Timestamptz(6)
  name      String     @default("")
  email     String
  Project   Project[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model CardList {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt   DateTime  @default(now()) @db.Timestamptz(6)
  title       String?   @default("")
  description String?   @default("")
  order       Int?      @default(0)
  updatedAt   DateTime? @db.Timestamptz(6)
  archived    Boolean?  @default(false)
  projectId   String?   @db.Uuid
  Card       Card[]
  Project     Project?  @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  
  @@schema("public")
}

enum ProjectType {
  TodoList
  Kanban

  @@schema("public")
}
